/* Automatically generated nanopb header */
/* Generated by nanopb-0.2.1-dev at Tue Apr  2 00:02:36 2013. */

#ifndef _PB_MESSAGE_NPB_H_
#define _PB_MESSAGE_NPB_H_
#include <pb.h>

#include <protobuf/generated/types.npb.h>
#include <protobuf/generated/object.npb.h>
#include <protobuf/generated/rtapi_message.npb.h>
#include <protobuf/generated/test.npb.h>
#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
/* Struct definitions */
typedef struct _Command {
    CmdType op;
    bool has_serial;
    int32_t serial;
    bool has_rsvp;
    ReplyRequired rsvp;
    bool has_origin;
    Originator origin;
    size_t args_count;
    Object args[20];
    bool has_timestamp;
    int32_t timestamp;
} Command;

typedef struct _NmlMessage {
    int32_t type;
    pb_callback_t payload;
} NmlMessage;

typedef struct _Response {
    RespType response;
    bool has_in_reply_to;
    CmdType in_reply_to;
    bool has_request_serial;
    int32_t request_serial;
    bool has_status;
    StatusType status;
    bool has_origin;
    Originator origin;
    bool has_timestamp;
    int64_t timestamp;
    bool has_errormsg;
    char errormsg[100];
    size_t args_count;
    Object args[20];
    size_t failed_args_count;
    Object failed_args[20];
} Response;

typedef struct _Container {
    uint32_t length;
    MsgType type;
    bool has_command;
    Command command;
    bool has_response;
    Response response;
    bool has_rtapi_message;
    RTAPI_Message rtapi_message;
    bool has_nml;
    pb_callback_t nml;
    bool has_motion;
    pb_callback_t motion;
    bool has_wou;
    pb_callback_t wou;
    bool has_syslog;
    pb_callback_t syslog;
    bool has_ascii;
    pb_callback_t ascii;
    bool has_unicode;
    pb_callback_t unicode;
    bool has_gcode;
    pb_callback_t gcode;
    bool has_python;
    pb_callback_t python;
    bool has_pickle;
    pb_callback_t pickle;
    bool has_tcl;
    pb_callback_t tcl;
    bool has_xml;
    pb_callback_t xml;
    bool has_json;
    pb_callback_t json;
    bool has_jpeg;
    pb_callback_t jpeg;
    bool has_png;
    pb_callback_t png;
    bool has_tiff;
    pb_callback_t tiff;
    bool has_postscript;
    pb_callback_t postscript;
    bool has_svg;
    pb_callback_t svg;
    bool has_pru_firmware;
    pb_callback_t pru_firmware;
    bool has_mesa_5i20_firmware;
    pb_callback_t mesa_5i20_firmware;
    bool has_test1;
    Test1 test1;
    bool has_test2;
    Test2 test2;
    bool has_test3;
    Test3 test3;
} Container;

/* Default values for struct fields */

/* Struct field encoding specification for nanopb */
extern const pb_field_t Command_fields[7];
extern const pb_field_t Response_fields[10];
extern const pb_field_t NmlMessage_fields[3];
extern const pb_field_t Container_fields[28];

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif

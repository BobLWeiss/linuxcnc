// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rtapi_message.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "rtapi_message.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* RTAPI_Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RTAPI_Message_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_rtapi_5fmessage_2eproto() {
  protobuf_AddDesc_rtapi_5fmessage_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "rtapi_message.proto");
  GOOGLE_CHECK(file != NULL);
  RTAPI_Message_descriptor_ = file->message_type(0);
  static const int RTAPI_Message_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RTAPI_Message, msglevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RTAPI_Message, format_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RTAPI_Message, arg_),
  };
  RTAPI_Message_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RTAPI_Message_descriptor_,
      RTAPI_Message::default_instance_,
      RTAPI_Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RTAPI_Message, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RTAPI_Message, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RTAPI_Message));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_rtapi_5fmessage_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RTAPI_Message_descriptor_, &RTAPI_Message::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_rtapi_5fmessage_2eproto() {
  delete RTAPI_Message::default_instance_;
  delete RTAPI_Message_reflection_;
  delete RTAPI_Message::_default_format_;
}

void protobuf_AddDesc_rtapi_5fmessage_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_nanopb_2eproto();
  ::protobuf_AddDesc_types_2eproto();
  ::protobuf_AddDesc_value_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023rtapi_message.proto\032\014nanopb.proto\032\013typ"
    "es.proto\032\013value.proto\"\205\001\n\rRTAPI_Message\022"
    "*\n\010msglevel\030\n \002(\0162\t.MsgLevel:\rRTAPI_MSG_"
    "DBG\022,\n\006format\030\024 \002(\t:\025*** uninitialized *"
    "**B\005\222\?\002\010d\022\032\n\003arg\030\036 \003(\0132\006.ValueB\005\222\?\002\020\024", 197);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "rtapi_message.proto", &protobuf_RegisterTypes);
  RTAPI_Message::_default_format_ =
      new ::std::string("*** uninitialized ***", 21);
  RTAPI_Message::default_instance_ = new RTAPI_Message();
  RTAPI_Message::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_rtapi_5fmessage_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_rtapi_5fmessage_2eproto {
  StaticDescriptorInitializer_rtapi_5fmessage_2eproto() {
    protobuf_AddDesc_rtapi_5fmessage_2eproto();
  }
} static_descriptor_initializer_rtapi_5fmessage_2eproto_;

// ===================================================================

::std::string* RTAPI_Message::_default_format_ = NULL;
#ifndef _MSC_VER
const int RTAPI_Message::kMsglevelFieldNumber;
const int RTAPI_Message::kFormatFieldNumber;
const int RTAPI_Message::kArgFieldNumber;
#endif  // !_MSC_VER

RTAPI_Message::RTAPI_Message()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RTAPI_Message::InitAsDefaultInstance() {
}

RTAPI_Message::RTAPI_Message(const RTAPI_Message& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RTAPI_Message::SharedCtor() {
  _cached_size_ = 0;
  msglevel_ = 4;
  format_ = const_cast< ::std::string*>(_default_format_);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RTAPI_Message::~RTAPI_Message() {
  SharedDtor();
}

void RTAPI_Message::SharedDtor() {
  if (format_ != _default_format_) {
    delete format_;
  }
  if (this != default_instance_) {
  }
}

void RTAPI_Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RTAPI_Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RTAPI_Message_descriptor_;
}

const RTAPI_Message& RTAPI_Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_rtapi_5fmessage_2eproto();
  return *default_instance_;
}

RTAPI_Message* RTAPI_Message::default_instance_ = NULL;

RTAPI_Message* RTAPI_Message::New() const {
  return new RTAPI_Message;
}

void RTAPI_Message::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    msglevel_ = 4;
    if (has_format()) {
      if (format_ != _default_format_) {
        format_->assign(*_default_format_);
      }
    }
  }
  arg_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RTAPI_Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .MsgLevel msglevel = 10 [default = RTAPI_MSG_DBG];
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgLevel_IsValid(value)) {
            set_msglevel(static_cast< ::MsgLevel >(value));
          } else {
            mutable_unknown_fields()->AddVarint(10, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(162)) goto parse_format;
        break;
      }

      // required string format = 20 [default = "*** uninitialized ***"];
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_format:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_format()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->format().data(), this->format().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(242)) goto parse_arg;
        break;
      }

      // repeated .Value arg = 30;
      case 30: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_arg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arg()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(242)) goto parse_arg;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RTAPI_Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .MsgLevel msglevel = 10 [default = RTAPI_MSG_DBG];
  if (has_msglevel()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->msglevel(), output);
  }

  // required string format = 20 [default = "*** uninitialized ***"];
  if (has_format()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->format().data(), this->format().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      20, this->format(), output);
  }

  // repeated .Value arg = 30;
  for (int i = 0; i < this->arg_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      30, this->arg(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RTAPI_Message::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .MsgLevel msglevel = 10 [default = RTAPI_MSG_DBG];
  if (has_msglevel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      10, this->msglevel(), target);
  }

  // required string format = 20 [default = "*** uninitialized ***"];
  if (has_format()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->format().data(), this->format().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->format(), target);
  }

  // repeated .Value arg = 30;
  for (int i = 0; i < this->arg_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        30, this->arg(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RTAPI_Message::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .MsgLevel msglevel = 10 [default = RTAPI_MSG_DBG];
    if (has_msglevel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msglevel());
    }

    // required string format = 20 [default = "*** uninitialized ***"];
    if (has_format()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->format());
    }

  }
  // repeated .Value arg = 30;
  total_size += 2 * this->arg_size();
  for (int i = 0; i < this->arg_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arg(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RTAPI_Message::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RTAPI_Message* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RTAPI_Message*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RTAPI_Message::MergeFrom(const RTAPI_Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  arg_.MergeFrom(from.arg_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msglevel()) {
      set_msglevel(from.msglevel());
    }
    if (from.has_format()) {
      set_format(from.format());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RTAPI_Message::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RTAPI_Message::CopyFrom(const RTAPI_Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RTAPI_Message::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  for (int i = 0; i < arg_size(); i++) {
    if (!this->arg(i).IsInitialized()) return false;
  }
  return true;
}

void RTAPI_Message::Swap(RTAPI_Message* other) {
  if (other != this) {
    std::swap(msglevel_, other->msglevel_);
    std::swap(format_, other->format_);
    arg_.Swap(&other->arg_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RTAPI_Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RTAPI_Message_descriptor_;
  metadata.reflection = RTAPI_Message_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
